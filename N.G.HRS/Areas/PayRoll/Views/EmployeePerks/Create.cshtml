@model N.G.HRS.Areas.PayRoll.Models.EmployeePerks
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "اكرامية الموظفين";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Active"] = "AddEmployee";
    ViewData["Open"] = "Open2";
    ViewData["OpenOperation"] = "OpenOperation2";
}

<h1>Create</h1>

<h4>اكرامية الموظفين</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"> التاريخ </label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>



@* 
            <div class="form-group">
                <label asp-for="Date" class="control-label"> التاريخ </label>
                <div class="input-group flatpickr flatpickr-date" id="flatpickr-date">
                    <input asp-for="Date" class="form-control" />
                    <span class="input-group-text input-group-addon" data-toggle>
                        <i data-feather="calendar"></i>
                </div>
                

                <span asp-validation-for="Date" class="text-danger"></span>

            </div> *@


            <div class="form-group">
                <label asp-for="EmployeeId" class="control-label"></label>
                <select asp-for="EmployeeId" class="form-control" asp-items="ViewBag.EmployeeId">
                    <option value="">اختر الموظف</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Percentage" class="control-label"></label>
                <input asp-for="Percentage" class="form-control" />
                <span asp-validation-for="Percentage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <input asp-for="Notes" class="form-control" />
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" id="submit" value="Create" class="btn btn-primary" />
            </div>
            <!-- حقل مخفي لتخزين قيمة الراتب -->
            <input type="hidden" id="EmployeeSalary" />
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        $(document).ready(function () {
            // تحقق من اختيار اسم الموظف قبل الإرسال
            $("#submit").click(function (event) {
                var employeeId = $("#EmployeeId").val();
                if (employeeId === "") {
                    event.preventDefault(); // منع إرسال النموذج
                    Swal.fire({
                        icon: "error",
                        title: "خطأ",
                        text: "يرجى اختيار الموظف",
                    });
                }
            });

            // تضليل حقل النسبة عند إدخال قيمة في حقل الكمية
            $("#Amount").change(function () {
                var amountValue = $(this).val();
                amountValue !== '' ? $('#Percentage').prop('disabled', true) : $('#Percentage').prop('disabled', false);
            });

            // حساب النسبة عند تغيير قيمة الكمية
            $("#Amount").change(function () {
                var amount = $(this).val();
                var salary = $("#EmployeeSalary").val();
                if (!isNaN(amount) && !isNaN(salary) && salary > 0) {
                    var percentage = (amount / salary) * 100;
                    $("#Percentage").val(percentage.toFixed(2)); // تحديد عدد الأرقام بعد الفاصلة
                }
            });

            // استرجاع الراتب عند اختيار اسم الموظف
            $("#EmployeeId").change(function () {
                var employeeId = $(this).val();
                $("#Amount").val('');
                $("#Percentage").val('');
                if (employeeId !== "") {
                    // قم بفحص ما إذا كان الموظف لديه راتب
                    $.ajax({
                        url: '/PayRoll/EmployeePerks/financialStatementsnclude?id=' + employeeId,
                        type: 'GET',
                        success: function (data) {
                            var salary = data.salary;
                            if (salary > 0) {
                                $("#EmployeeSalary").val(salary);
                                $('#Percentage').prop('disabled', false);
                            } else {
                                $("#EmployeeSalary").val('');
                                $('#Percentage').prop('disabled', true);
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: "error",
                                title: "خطأ",
                                text: "حدث خطأ أثناء فحص الراتب"
                            });
                        }
                    });
                } else {
                    $('#Percentage').prop('disabled', false);
                }
            } );

            // حساب الكمية عند تغيير النسبة
            $("#Percentage").change(function () {
                var percentage = $(this).val();
                var salary = $("#EmployeeSalary").val();
                if (!isNaN(salary) && salary > 0 && !isNaN(percentage)) {
                    var amount = (salary * percentage) / 100;
                    $("#Amount").val(amount.toFixed(2)); // تحديد عدد الأرقام بعد الفاصلة
                }
            });
        });
    </script>
}
