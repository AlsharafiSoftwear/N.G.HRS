@model N.G.HRS.Areas.PayRoll.Models.EmployeeAdvances
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Create";
    Layout = "_Layout";

}
<div class="card">

    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h3> EmployeeAdvances   </h3>
                    </div>
                    <div class="card-body">
                        <form asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="row">
                                <div class="col-md-4">
                                    <label asp-for="EmployeeId" class="control-label"></label>
                                    <select asp-for="EmployeeId" id="EmployeeId" class="js-example-basic-single form-select" asp-items="@(ViewData["EmployeeId"] as SelectList)">
                                        <option value="" selected disabled></option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="DepartmentId" class="control-label"></label>
                                    <select asp-for="DepartmentId" id="department" class="js-example-basic-single form-select" asp-items="@(ViewData["DepartmentId"] as SelectList)" readonly>
                                        <option value="" selected disabled></option>
                                    </select>
                                    <span id="departmentWarning" class="text-danger" style="display: none;">يتم تعطيل تغيير الإدارة.</span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="SectionId" class="control-label"></label>
                                    <select asp-for="SectionId" id="SectionId" class="js-example-basic-single form-select" asp-items="@(ViewData["SectionId"] as SelectList)" readonly>
                                        <option value="" selected disabled></option>
                                    </select>
                                    <span id="sectionWarning" class="text-danger" style="display: none;">يتم تعطيل تغيير القسم.</span>
                                    <span asp-validation-for="SectionId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <label asp-for="EmployeeAccountId" class="control-label"></label>
                                    <select asp-for="EmployeeAccountId" id="EmployeeAccountId" class="js-example-basic-single form-select" asp-items="@(ViewData["EmployeeAccountId"] as SelectList)">
                                        <option value="" selected disabled></option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="CurrencyId" class="control-label"></label>
                                    <select asp-for="CurrencyId" id="CurrencyId" class="js-example-basic-single form-select" asp-items="@(ViewData["CurrencyId"] as SelectList)">
                                        <option value="" selected disabled></option>
                                    </select>
                                    <span id="CurrencyWarning" class="text-danger" style="display: none;">يرجى تحديد العملة!</span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="Amount" class="control-label"></label>
                                    <input asp-for="Amount" id="Amount" class="form-control" />
                                    <span asp-validation-for="Amount" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="Notes" class="control-label"></label>
                                <input asp-for="Notes" class="form-control" />
                                <span asp-validation-for="Notes" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="submit" id="submit" value="إنشاء" class="btn btn-primary" />
                                <a asp-action="Index" class="btn btn-light" style="color;white">رجوع للقائمة </a>

                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $('#department').click(function () {
                $('#departmentWarning').show();
            });

            $('#SectionId').click(function () {
                $('#sectionWarning').show();
            });

            $('#CurrencyId').click(function () {
                $('#CurrencyWarning').show();
            });

            // عند تغيير الموظف، تحميل بيانات الموظف
            $('#EmployeeId').change(function () {
                var id = this.value;
                if (id != "") {
                    // Ajax لجلب بيانات الموظف
                    $.ajax({
                        url: '/PayRoll/EmployeeAdvances/LoadEmployee?id=' + id,
                        type: 'GET',
                        success: function (data) {
                            if (data !== null && data.departmentsId !== null) {
                                $('#department').val(data.departmentsId).change();
                                $('#SectionId').val(data.sectionsId).change();
                                $('#CurrencyId').val(data.CurrencyId).change();
                            } else {
                                showError("الموظف لا ينتمي إلى إدارة أو قسم!!");
                            }
                        },
                        error: function () {
                            showError("حدث خطأ أثناء جلب بيانات الموظف!!");
                        }
                    });
                    // Ajax لجلب بيانات حساب الموظف
                    $.ajax({
                        url: '/PayRoll/EmployeeAdvances/EmployeeAccount?id=' + id,
                        type: 'GET',
                        success: function (data) {
                            $('#EmployeeAccountId').empty();
                            console.log(data);
                            $('#EmployeeAccountId').append(`<option value=""></option>`);

                            var hasAccount = false; // متغير لتتبع وجود حساب الموظف
                            $.each(data.account, function (i, item) {
                                if (item !== null && item.id !== null) {
                                    $('#EmployeeAccountId').append(`<option value="${item.id}">${item.name}</option>`);
                                    hasAccount = true; // تعيين المتغير إلى القيمة الصحيحة إذا كان الحساب موجودًا
                                } else {
                                    showError("الموظف ليس لديه حساب!!");
                                }
                            });

                            // تعطيل زر الإرسال إذا لم يكن لدى الموظف حساب
                            if (!hasAccount) {
                                $("#submit").prop("disabled", true);
                            } else {
                                $("#submit").prop("disabled", false);
                            }

                        },
                        error: function () {
                            showError("حدث خطأ أثناء جلب بيانات حساب الموظف!!");
                        }
                    });
                } else {
                    showError("يرجى تحديد إدارة صالحة!!");
                }
            });

            // التحقق من اختيار العملة قبل الإرسال
            $("#submit").click(function (event) {
                const EmployeeId = $("#EmployeeId").val();
                const CurrencyId = $("#CurrencyId").val();
                const EmployeeAccountId = $("#EmployeeAccountId").val(); // احصل على قيمة حساب الموظف المحدد
                const Amount = $("#Amount").val(); // احصل على قيمة المبلغ

                // التحقق مما إذا كان الموظف قد حدد حسابًا أم لا
                if (EmployeeId === "") {
                    event.preventDefault(); // منع إرسال النموذج
                    showError("يجب  تحديد الموظف!"); // عرض رسالة الخطأ
                } else if (EmployeeAccountId === "") {
                    event.preventDefault(); // منع إرسال النموذج
                    showError("يجب تحديد حساب للموظف!"); // عرض رسالة الخطأ
                } else if (CurrencyId === "") {
                    event.preventDefault(); // منع إرسال النموذج
                    showError("يرجى تحديد العملة!");
                }
                else if (Amount === "") {
                    event.preventDefault(); // منع إرسال النموذج
                    showError("يرجى تحديد المبلغ!"); // عرض رسالة الخطأ
                }
            });

            // عرض رسالة الخطأ
            function showError(errorMessage) {
                Swal.fire({
                    icon: "error",
                    title: "خطأ",
                    text: errorMessage
                });
            }
        });
    </script>
}
